# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
properties:
  assertions:
    - resource: Microsoft.Windows.Developer/OsVersion
      directives:
        description: Verify min OS version requirement
        allowPrerelease: true
      settings:
        MinVersion: '10.0.22000'
  resources:
# Set Windows Settings
    - resource: Microsoft.Windows.Developer/DeveloperMode
      directives:
        description: Enable Developer Mode
        allowPrerelease: true
      settings:
        Ensure: Present
# Install Resources
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Git
      directives:
        description: Install Git
        allowPrerelease: true
      settings:
        id: Git.Git
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Yarn
        allowPrerelease: true
      settings:
        id: Yarn.Yarn
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Python 3.10
        allowPrerelease: true
      settings:
        id: Python.Python.3.10
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Node.js LTS
        allowPrerelease: true
      settings:
        id: OpenJS.NodeJS.LTS
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install .NET SDK 8.0-preview
        allowPrerelease: true
      settings:
        id: Microsoft.DotNet.SDK.Preview
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Docker Desktop
        allowPrerelease: true
      settings:
        id: Docker.DockerDesktop
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Git LFS
        allowPrerelease: true
      settings:
        id: GitHub.GitLFS
        source: winget
# Install Development Applications
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install PowerShell 7
        allowPrerelease: true
      settings:
        id: Microsoft.PowerShell
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: vsPackage
      directives:
        description: Install Visual Studio 2022 Enterprise
        allowPrerelease: true
      settings:
        id: Microsoft.VisualStudio.2022.Enterprise
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: VSCode
      directives:
        description: Install Visual Studio Code
        allowPrerelease: true
      settings:
        id: Microsoft.VisualStudioCode
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: vsPackage.Preview
      directives:
        description: Install Visual Studio 2022 Enterprise Preview
        allowPrerelease: true
      settings:
        id: Microsoft.VisualStudio.2022.Enterprise.Preview
        source: winget
    - resource: Microsoft.VisualStudio.DSC/VSComponents
      dependsOn:
        - vsPackage
        - vsPackage.Preview
      directives:
        description: Install required VS workloads
        allowPrerelease: true
      settings:
        # https://learn.microsoft.com/visualstudio/install/workload-and-component-ids
        productId: Microsoft.VisualStudio.Product.Enterprise
        channelId: VisualStudio.17.Release
        vsConfigFile: '${WinGetConfigRoot}\.vsconfig'
# Install additional Dev/Debug Applications
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: gitkraken
      directives:
        description: Install GitKraken
        allowPrerelease: true
      settings:
        id: Axosoft.GitKraken
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: ilSpy
      directives:
        description: Install ILSpy
        allowPrerelease: true
      settings:
        id: icsharpcode.ILSpy
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: msbuildSLV
      directives:
        description: Install MSBuild Structured Log Viewer
        allowPrerelease: true
      settings:
        id: KirillOsenkov.MSBuildStructuredLogViewer
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: nugetPkgExplr
      directives:
        description: Install NuGet Package Explorer
        allowPrerelease: true
      settings:
        id: 9WZDNCRDMDM3
        source: msstore
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: windowsTerminal
      directives:
        description: Install Windows Terminal
        allowPrerelease: true
      settings:
        id: Microsoft.WindowsTerminal
        source: winget
# Utilities
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: obsStudio
      directives:
        description: Install OBS Studio
        allowPrerelease: true
      settings:
        id: OBSProject.OBSStudio
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: screenToGif
      directives:
        description: Install ScreenToGif
        allowPrerelease: true
      settings:
        id: NickeManarin.ScreenToGif
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Everything
        allowPrerelease: true
      settings:
        id: voidtools.Everything
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Kleopatra
        allowPrerelease: true
      settings:
        id: GnuPG.Gpg4win
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install Github CLI
        allowPrerelease: true
      settings:
        id: GitHub.cli
        source: winget
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      directives:
        description: Install NuGet Package Explorer
        allowPrerelease: true
      settings:
        id: 9WZDNCRDMDM3
        source: msstore
  configurationVersion: 0.2.0